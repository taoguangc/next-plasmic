// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qo8TRN16ADizSE4k432S4w
// Component: tWBZhmS_WNbt

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: EJkb5HtYOQZW/component
import CaseStudiesWraper from "../../CaseStudiesWraper"; // plasmic-import: AkRn-HJxfE8g/component
import Button from "../../Button"; // plasmic-import: 7dr9nA4iZG8X/component
import CtaBottom from "../../CtaBottom"; // plasmic-import: ygN1lj6Bk5Gd/component
import Footer from "../../Footer"; // plasmic-import: j9SCK1PNbqFQ/component

import { useScreenVariants as useScreenVariantsnAq2AMfGe5Lj } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: nAQ2aMFGe5LJ/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_professional_services.module.css"; // plasmic-import: qo8TRN16ADizSE4k432S4w/projectcss
import sty from "./PlasmicStories.module.css"; // plasmic-import: tWBZhmS_WNbt/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: OkvPHvnJXxw8/icon

createPlasmicElementProxy;

export type PlasmicStories__VariantMembers = {};
export type PlasmicStories__VariantsArgs = {};
type VariantPropType = keyof PlasmicStories__VariantsArgs;
export const PlasmicStories__VariantProps = new Array<VariantPropType>();

export type PlasmicStories__ArgsType = {};
type ArgPropType = keyof PlasmicStories__ArgsType;
export const PlasmicStories__ArgProps = new Array<ArgPropType>();

export type PlasmicStories__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  pageBanerSection?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  section?: p.Flex<"section">;
  columns?: p.Flex<"div">;
  ctaBottom?: p.Flex<typeof CtaBottom>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultStoriesProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicStories__RenderFunc(props: {
  variants: PlasmicStories__VariantsArgs;
  args: PlasmicStories__ArgsType;
  overrides: PlasmicStories__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsnAq2AMfGe5Lj()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div
            data-plasmic-name={"pageBanerSection"}
            data-plasmic-override={overrides.pageBanerSection}
            className={classNames(projectcss.all, sty.pageBanerSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__ezjeU)}>
              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1
                )}
              >
                {"Stories"}
              </h1>
            </div>
          </div>
          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__u8QD)}>
              <div className={classNames(projectcss.all, sty.freeBox__iYlql)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__wutAa)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"columns"}
                    data-plasmic-override={overrides.columns}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__h6XP)}
                    >
                      <CaseStudiesWraper
                        className={classNames(
                          "__wab_instance",
                          sty.caseStudiesWraper__gk74V
                        )}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__zmqNc)}
                    >
                      <CaseStudiesWraper
                        className={classNames(
                          "__wab_instance",
                          sty.caseStudiesWraper__kCdh3
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___1GZu3)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/professional_services/images/girls18285391920Jpg.jpg",
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }}
                        />
                      </CaseStudiesWraper>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__yoUnu)}
                    >
                      <CaseStudiesWraper
                        className={classNames(
                          "__wab_instance",
                          sty.caseStudiesWraper___4T3Yj
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__i548B)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/professional_services/images/woman32879561920Jpg.jpg",
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }}
                        />
                      </CaseStudiesWraper>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__p58Yb)}
                    >
                      <CaseStudiesWraper
                        className={classNames(
                          "__wab_instance",
                          sty.caseStudiesWraper__gCCz5
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__wEpDr)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/professional_services/images/girl18484541920Jpg.jpg",
                            fullWidth: 1920,
                            fullHeight: 1279,
                            aspectRatio: undefined
                          }}
                        />
                      </CaseStudiesWraper>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__b8UKy)}
                    >
                      <CaseStudiesWraper
                        className={classNames(
                          "__wab_instance",
                          sty.caseStudiesWraper__en7WL
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__mEXaN)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/professional_services/images/girl23664381920Jpg.jpg",
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }}
                        />
                      </CaseStudiesWraper>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___45ZMw)}
                    >
                      <CaseStudiesWraper
                        className={classNames(
                          "__wab_instance",
                          sty.caseStudiesWraper__w5I6
                        )}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__qmzN)}
                    >
                      <CaseStudiesWraper
                        className={classNames(
                          "__wab_instance",
                          sty.caseStudiesWraper__hgheQ
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___8Wv54)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/professional_services/images/woman31165871920Jpg.jpg",
                            fullWidth: 1920,
                            fullHeight: 1279,
                            aspectRatio: undefined
                          }}
                        />
                      </CaseStudiesWraper>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__bnw4M)}
                    >
                      <CaseStudiesWraper
                        className={classNames(
                          "__wab_instance",
                          sty.caseStudiesWraper__bRzhl
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___93IKo)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/professional_services/images/girl17750351920Jpg.jpg",
                            fullWidth: 1920,
                            fullHeight: 1191,
                            aspectRatio: undefined
                          }}
                        />
                      </CaseStudiesWraper>
                    </div>
                  </p.Stack>
                </p.Stack>
              </div>
            </div>
          </section>
          <CtaBottom
            data-plasmic-name={"ctaBottom"}
            data-plasmic-override={overrides.ctaBottom}
            className={classNames("__wab_instance", sty.ctaBottom)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "pageBanerSection",
    "h1",
    "section",
    "columns",
    "ctaBottom",
    "footer"
  ],
  header: ["header"],
  pageBanerSection: ["pageBanerSection", "h1"],
  h1: ["h1"],
  section: ["section", "columns"],
  columns: ["columns"],
  ctaBottom: ["ctaBottom"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  pageBanerSection: "div";
  h1: "h1";
  section: "section";
  columns: "div";
  ctaBottom: typeof CtaBottom;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicStories__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicStories__VariantsArgs;
    args?: PlasmicStories__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicStories__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicStories__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicStories__ArgProps,
          internalVariantPropNames: PlasmicStories__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicStories__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicStories";
  } else {
    func.displayName = `PlasmicStories.${nodeName}`;
  }
  return func;
}

export const PlasmicStories = Object.assign(
  // Top-level PlasmicStories renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    pageBanerSection: makeNodeComponent("pageBanerSection"),
    h1: makeNodeComponent("h1"),
    section: makeNodeComponent("section"),
    columns: makeNodeComponent("columns"),
    ctaBottom: makeNodeComponent("ctaBottom"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicStories
    internalVariantProps: PlasmicStories__VariantProps,
    internalArgProps: PlasmicStories__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicStories;
/* prettier-ignore-end */
