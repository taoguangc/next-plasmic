// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qo8TRN16ADizSE4k432S4w
// Component: URbZe7ntB5Vw

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: EJkb5HtYOQZW/component
import Button from "../../Button"; // plasmic-import: 7dr9nA4iZG8X/component
import Testimonial from "../../Testimonial"; // plasmic-import: 5YvLxLWTv5Hw/component
import CtaBottom from "../../CtaBottom"; // plasmic-import: ygN1lj6Bk5Gd/component
import Footer from "../../Footer"; // plasmic-import: j9SCK1PNbqFQ/component

import { useScreenVariants as useScreenVariantsnAq2AMfGe5Lj } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: nAQ2aMFGe5LJ/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_professional_services.module.css"; // plasmic-import: qo8TRN16ADizSE4k432S4w/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: URbZe7ntB5Vw/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: OkvPHvnJXxw8/icon
import Icon8Icon from "./icons/PlasmicIcon__Icon8"; // plasmic-import: 6EmGHJRkrRIE/icon
import Icon13Icon from "./icons/PlasmicIcon__Icon13"; // plasmic-import: XLJTwwhisWSo/icon
import Icon10Icon from "./icons/PlasmicIcon__Icon10"; // plasmic-import: T4sZi4emBuVn/icon
import Icon11Icon from "./icons/PlasmicIcon__Icon11"; // plasmic-import: tmwKE23XA9gb/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  hero?: p.Flex<"div">;
  container7?: p.Flex<"div">;
  row3?: p.Flex<"div">;
  info?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  fig?: p.Flex<"div">;
  companiesSection?: p.Flex<"div">;
  container2?: p.Flex<"div">;
  ctaBottom?: p.Flex<typeof CtaBottom>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsnAq2AMfGe5Lj()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            className={classNames(projectcss.all, sty.hero)}
          >
            <div
              data-plasmic-name={"container7"}
              data-plasmic-override={overrides.container7}
              className={classNames(projectcss.all, sty.container7)}
            >
              <div
                data-plasmic-name={"row3"}
                data-plasmic-override={overrides.row3}
                className={classNames(projectcss.all, sty.row3)}
              >
                <div
                  data-plasmic-name={"info"}
                  data-plasmic-override={overrides.info}
                  className={classNames(projectcss.all, sty.info)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___6B2OZ)}
                  >
                    <h1
                      data-plasmic-name={"h1"}
                      data-plasmic-override={overrides.h1}
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1
                      )}
                    >
                      {
                        "\u9009\u62e9\u6211\u4eec\n\u8fdb\u884c\u8425\u9500\u6444\u5f71"
                      }
                    </h1>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__w2XuB
                      )}
                    >
                      {
                        "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt."
                      }
                    </div>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__jG5Di
                      )}
                      color={"blackCoffee"}
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___4ZHsE
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Get In touch"
                          : "Get In touch"}
                      </div>
                    </Button>
                  </p.Stack>
                </div>
                <div
                  data-plasmic-name={"fig"}
                  data-plasmic-override={overrides.fig}
                  className={classNames(projectcss.all, sty.fig)}
                />
              </div>
            </div>
          </div>
          <section className={classNames(projectcss.all, sty.section__evcng)}>
            <div className={classNames(projectcss.all, sty.freeBox__cBqA)}>
              <div className={classNames(projectcss.all, sty.freeBox__tw8Hk)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__s6NdE)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__af4Xl
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Why Choose Us"
                      : "\u4e3a\u4ec0\u4e48\u9009\u62e9\u6211\u4eec"}
                  </h2>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__p35Jj)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__lj3Vl)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__trABe
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__psJkL
                          )}
                        >
                          <Icon8Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__p5Cgn
                            )}
                            role={"img"}
                          />
                        </div>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__oqk7Y
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__kbR6C
                            )}
                          >
                            {"Welcoming  trusted"}
                          </h3>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qtQMd
                            )}
                          >
                            {
                              "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ."
                            }
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___7Kry5)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__aEYjM
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__o1Rk6
                          )}
                        >
                          <Icon13Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__heAGs
                            )}
                            role={"img"}
                          />
                        </div>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mmXio
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__sqKf9
                            )}
                          >
                            {"Tested and secure"}
                          </h3>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oKapX
                            )}
                          >
                            {
                              "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ."
                            }
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__oxljp)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vxfKx
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__csxyd
                          )}
                        >
                          <Icon10Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__jmUh
                            )}
                            role={"img"}
                          />
                        </div>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gori
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__mBy6M
                            )}
                          >
                            {"Mindful notifications"}
                          </h3>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__uZhg8
                            )}
                          >
                            {
                              "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ."
                            }
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___9NCqJ)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__aTtX
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__zaPr
                          )}
                        >
                          <Icon11Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__khY4P
                            )}
                            role={"img"}
                          />
                        </div>
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__pptsb
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__xe0Tk
                            )}
                          >
                            {"Real-time results"}
                          </h3>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___7DzEk
                            )}
                          >
                            {
                              "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ."
                            }
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </div>
                  </p.Stack>
                </p.Stack>
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__eWQyw)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__w5Trb)}
            >
              <div className={classNames(projectcss.all, sty.column__c4Erw)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__pgCLj)}
                  displayHeight={"100%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/professional_services/images/girls18285391920Jpg.jpg",
                    fullWidth: 1920,
                    fullHeight: 1280,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__hNdqu)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__qswwI)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__cpnEl
                    )}
                  >
                    {"The standard used since"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___0Ptk9
                    )}
                  >
                    {
                      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4ObX
                    )}
                  >
                    {
                      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam"
                    }
                  </div>
                  <Button
                    className={classNames("__wab_instance", sty.button__s2Lyq)}
                    color={"blackCoffee"}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pzUwE
                      )}
                    >
                      {"About Us"}
                    </div>
                  </Button>
                </p.Stack>
              </div>
            </p.Stack>
            <div className={classNames(projectcss.all, sty.freeBox__l4Grl)}>
              <div className={classNames(projectcss.all, sty.freeBox__okHu7)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__xGyL7)}
                />
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__cGr2A)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__jcCoV)}
            >
              <div className={classNames(projectcss.all, sty.column___6NuzQ)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__cRyLn)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__jkYuZ
                    )}
                  >
                    {"The standard used since"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lOOmv
                    )}
                  >
                    {
                      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4FXnY
                    )}
                  >
                    {
                      "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam"
                    }
                  </div>
                  <Button
                    className={classNames("__wab_instance", sty.button__xzz2A)}
                    color={"blackCoffee"}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zLtkP
                      )}
                    >
                      {"Contact Us"}
                    </div>
                  </Button>
                </p.Stack>
              </div>
              <div className={classNames(projectcss.all, sty.column__fqIlp)}>
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__sgkyt)}
                  displayHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "100%"
                      : "100%"
                  }
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/professional_services/images/people31046351920Jpg.jpg",
                    fullWidth: 1920,
                    fullHeight: 1281,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </p.Stack>
            <div className={classNames(projectcss.all, sty.freeBox__suElx)}>
              <div className={classNames(projectcss.all, sty.freeBox__pvI5Q)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__jT22Y)}
                />
              </div>
            </div>
          </section>
          <div className={classNames(projectcss.all, sty.freeBox___1C7JM)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__paKBj)}
            >
              <Testimonial
                className={classNames(
                  "__wab_instance",
                  sty.testimonial___1PWq8
                )}
                slot={
                  <React.Fragment>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__oFkx2)}
                      displayHeight={"64px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"64px"}
                      src={{
                        src: "/plasmic/professional_services/images/woman32879561920Jpg.jpg",
                        fullWidth: 1920,
                        fullHeight: 1280,
                        aspectRatio: undefined
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__kJiXd)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__aqeJd
                        )}
                      >
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__nDxwS
                          )}
                        >
                          {"Lorem doi"}
                        </h5>
                      </div>
                    </p.Stack>
                  </React.Fragment>
                }
              />

              <Testimonial
                className={classNames("__wab_instance", sty.testimonial__udbng)}
                slot={
                  <React.Fragment>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__nrxrF)}
                      displayHeight={"64px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"64px"}
                      src={{
                        src: "/plasmic/professional_services/images/people31046351920Jpg.jpg",
                        fullWidth: 1920,
                        fullHeight: 1281,
                        aspectRatio: undefined
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__oi7U)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__moqc4
                        )}
                      >
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__o5ZlF
                          )}
                        >
                          {"Lorem doi"}
                        </h5>
                      </div>
                    </p.Stack>
                  </React.Fragment>
                }
              />

              <Testimonial
                className={classNames("__wab_instance", sty.testimonial__s5HfO)}
                slot={
                  <React.Fragment>
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__mHuNd)}
                      displayHeight={"64px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"none"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"64px"}
                      src={{
                        src: "/plasmic/professional_services/images/girls18285391920Jpg.jpg",
                        fullWidth: 1920,
                        fullHeight: 1280,
                        aspectRatio: undefined
                      }}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__oxzs1)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___3RYcc
                        )}
                      >
                        <h5
                          className={classNames(
                            projectcss.all,
                            projectcss.h5,
                            projectcss.__wab_text,
                            sty.h5__d2VDb
                          )}
                        >
                          {"Lorem doi"}
                        </h5>
                      </div>
                    </p.Stack>
                  </React.Fragment>
                }
              />
            </p.Stack>
          </div>
          <div
            data-plasmic-name={"companiesSection"}
            data-plasmic-override={overrides.companiesSection}
            className={classNames(projectcss.all, sty.companiesSection)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"container2"}
              data-plasmic-override={overrides.container2}
              hasGap={true}
              className={classNames(projectcss.all, sty.container2)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__p3AQ
                )}
              >
                {"We work with local businesses"}
              </h2>
              <div className={classNames(projectcss.all, sty.freeBox__nMjCm)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__m1QB)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__h2JKq)}
                    displayHeight={"48px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={
                      "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-strapi.svg"
                    }
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__l5KHd)}
                    displayHeight={"48px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={
                      "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-segment.svg"
                    }
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__pJiU)}
                    displayHeight={"48px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={
                      "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-xstate.svg"
                    }
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___1NMTt)}
                    displayHeight={"48px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={
                      "https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-mapbox.svg"
                    }
                  />
                </p.Stack>
              </div>
            </p.Stack>
          </div>
          <CtaBottom
            data-plasmic-name={"ctaBottom"}
            data-plasmic-override={overrides.ctaBottom}
            className={classNames("__wab_instance", sty.ctaBottom)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "hero",
    "container7",
    "row3",
    "info",
    "h1",
    "fig",
    "companiesSection",
    "container2",
    "ctaBottom",
    "footer"
  ],
  header: ["header"],
  hero: ["hero", "container7", "row3", "info", "h1", "fig"],
  container7: ["container7", "row3", "info", "h1", "fig"],
  row3: ["row3", "info", "h1", "fig"],
  info: ["info", "h1"],
  h1: ["h1"],
  fig: ["fig"],
  companiesSection: ["companiesSection", "container2"],
  container2: ["container2"],
  ctaBottom: ["ctaBottom"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  hero: "div";
  container7: "div";
  row3: "div";
  info: "div";
  h1: "h1";
  fig: "div";
  companiesSection: "div";
  container2: "div";
  ctaBottom: typeof CtaBottom;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    hero: makeNodeComponent("hero"),
    container7: makeNodeComponent("container7"),
    row3: makeNodeComponent("row3"),
    info: makeNodeComponent("info"),
    h1: makeNodeComponent("h1"),
    fig: makeNodeComponent("fig"),
    companiesSection: makeNodeComponent("companiesSection"),
    container2: makeNodeComponent("container2"),
    ctaBottom: makeNodeComponent("ctaBottom"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
